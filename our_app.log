(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:36) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:39) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:44) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:46) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:46) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:46) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:46) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:47) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:48) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:49) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:52) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 21:58) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:58) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:58) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:58) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Outer clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | INFO : 'Inner clipped image done' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 21:59) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:02) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:08) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:11) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:11) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:11) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:12) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:12) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:13) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:13) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:13) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:13) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:14) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:14) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:14) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:16) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:16) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:16) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:17) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:17) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:17) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:18) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:18) | matplotlib.pyplot | DEBUG : 'Loaded backend qtagg version 5.15.9.' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\unispace bd.ttf', name='Unispace', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335' 
(31 December 2023, 22:18) | matplotlib.font_manager | DEBUG : 'findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Mohamed\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:19) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:20) | index.py | WARNING : 'User choose (Choose)' 
(31 December 2023, 22:20) | index.py | WARNING : 'User choose (Choose)' 
(31 December 2023, 22:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:20) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:20) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:20) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:21) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:22) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/messi.jpeg' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:23) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/messi.jpeg' 
(31 December 2023, 22:24) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:24) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:24) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:24) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:24) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:24) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:25) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:25) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:25) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:26) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(31 December 2023, 22:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:30) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/messi.jpeg' 
(31 December 2023, 22:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:31) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:31) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:34) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:35) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:35) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:52) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(31 December 2023, 22:53) | image_mixer.py | INFO : 'The user open D:/projects/project/task4/Fourier-Transform-Mixer/forest.jpeg' 
(31 December 2023, 22:53) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(31 December 2023, 22:53) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(31 December 2023, 22:53) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:12) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:13) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:13) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 09:13) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 09:13) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:13) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 09:13) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:17) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 09:17) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:17) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 09:17) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:17) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:19) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:19) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/icons/cow.png' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:19) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/icons/down copy.png' 
(01 January 2024, 09:20) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:20) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:20) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/mixer.png' 
(01 January 2024, 09:20) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:20) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:22) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/parrot.jpeg' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 09:23) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 09:23) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 09:23) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:51) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:53) | index.py | WARNING : 'User choose (Choose)' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 12:53) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 12:54) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 12:55) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/mixer.png' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/mixer.png' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:28) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:29) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/mixer.png' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:30) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:30) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:31) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:31) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:32) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:34) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:34) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 13:34) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:34) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 13:35) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:35) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 13:35) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:35) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:35) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Inner clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Inner clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Inner clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Inner clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Inner clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Inner clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Outer clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | INFO : 'Outer clipped image done' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:36) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:37) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:37) | image_mixer.py | INFO : 'Outer clipped image done' 
(01 January 2024, 13:37) | image_mixer.py | INFO : 'Outer clipped image done' 
(01 January 2024, 13:37) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:37) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:37) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/parrot.jpeg' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | INFO : 'Outer clipped image done' 
(01 January 2024, 13:38) | image_mixer.py | INFO : 'Outer clipped image done' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:38) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:39) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:40) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 13:41) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:45) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 13:46) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 13:46) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 13:46) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 14:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:02) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:04) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 14:04) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 14:04) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:05) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 14:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 14:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/land escape.jpeg' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(01 January 2024, 14:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 14:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 14:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(01 January 2024, 14:09) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/forest.jpeg' 
(01 January 2024, 14:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(01 January 2024, 14:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(01 January 2024, 14:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:25) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(03 January 2024, 22:26) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:26) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/mixer.png' 
(03 January 2024, 22:26) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:26) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/parrot.jpeg' 
(03 January 2024, 22:26) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:26) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/parrot.jpeg' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/parrot.jpeg' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/parrot.jpeg' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(03 January 2024, 22:27) | image_mixer.py | INFO : 'The user open G:/Qt creator/Fourier-Transform-Mixer/messi.jpeg' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:27) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(03 January 2024, 22:28) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:44) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 10:45) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/mixer.png' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/forest.jpeg' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:46) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/land escape.jpeg' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:47) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:48) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/land escape.jpeg' 
(07 January 2024, 10:48) | index.py | WARNING : 'User choose (Choose)' 
(07 January 2024, 10:49) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 10:49) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 10:49) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 10:49) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:49) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 10:49) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:56) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 10:58) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/mixer.png' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:03) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(07 January 2024, 11:04) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:04) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/land escape.jpeg' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:05) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:06) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:06) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:06) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:06) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:06) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:06) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:06) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:06) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:06) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:06) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/forest.jpeg' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(07 January 2024, 11:08) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:08) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:08) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:08) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 11:08) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:10) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:10) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 11:10) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 11:10) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:10) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 11:11) | index.py | WARNING : 'User choose (Choose)' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:11) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(07 January 2024, 11:11) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:11) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:11) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:12) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:12) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:12) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:12) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/mixer.png' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:13) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/forest.jpeg' 
(07 January 2024, 11:14) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/land escape.jpeg' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 11:14) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/parrot.jpeg' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:15) | index.py | WARNING : 'User choose (Choose)' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:15) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 11:16) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize ViewOriginal class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize VeiwWeight class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Initialize ImageMixer class' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'The user open D:/CUFE/SBE/3rd/1st term/DSP/task4/Fourier-Transform-Mixer/messi.jpeg' 
(07 January 2024, 13:08) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 13:08) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 13:08) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 13:08) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 13:08) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 13:08) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 13:08) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 13:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 13:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 13:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 13:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 13:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 13:09) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 13:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 13:09) | image_mixer.py | INFO : 'Inner clipped image done' 
(07 January 2024, 13:09) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 13:09) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
(07 January 2024, 13:10) | image_mixer.py | DEBUG : 'Enter mix_images function' 
(07 January 2024, 13:10) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 13:10) | image_mixer.py | INFO : 'Outer clipped image done' 
(07 January 2024, 13:10) | image_mixer.py | DEBUG : 'Enter if(mode == 'mp') at mix_images function' 
(07 January 2024, 13:10) | image_mixer.py | DEBUG : 'calculate inverse fft for mix_images function' 
